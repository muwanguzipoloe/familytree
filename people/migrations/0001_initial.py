# Generated by Django 3.2.15 on 2022-11-18 11:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import people.fields
import taggit.managers
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('country_code', models.CharField(max_length=3)),
            ],
            options={
                'verbose_name_plural': 'countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.PositiveSmallIntegerField(choices=[(0, 'Birth'), (1, 'Baptism'), (3, 'Death'), (4, 'Burial')])),
                ('date', people.fields.UncertainDateField()),
                ('reference', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Place name', max_length=50)),
                ('county_state_province', models.CharField(help_text='County / state / province', max_length=30, verbose_name='county/state/province')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('country', models.ForeignKey(help_text='Country', on_delete=django.db.models.deletion.CASCADE, to='people.country')),
            ],
            options={
                'ordering': ['country', 'county_state_province', 'name'],
                'unique_together': {('country', 'county_state_province', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forename', models.CharField(help_text='Forename / given name', max_length=20)),
                ('middle_names', models.CharField(blank=True, help_text='Middle names(s)', max_length=50)),
                ('known_as', models.CharField(blank=True, help_text='Known as', max_length=20)),
                ('surname', models.CharField(help_text='Surname', max_length=30)),
                ('maiden_name', models.CharField(blank=True, help_text='Maiden name', max_length=30)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default=None, max_length=1)),
                ('deceased', models.BooleanField(default=True)),
                ('notes', tinymce.models.HTMLField(blank=True)),
                ('birth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='people.event')),
                ('death', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='people.event')),
                ('father', models.ForeignKey(blank=True, limit_choices_to={'gender': 'M'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children_of_father', to='people.person')),
                ('mother', models.ForeignKey(blank=True, limit_choices_to={'gender': 'F'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children_of_mother', to='people.person')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Tags', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['surname', 'forename', 'middle_names', '-birth__date'],
            },
        ),
        migrations.CreateModel(
            name='SurnameVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('canonical', models.CharField(help_text='Canonical surname', max_length=30)),
                ('variant', models.CharField(help_text='Surname variant', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Photograph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='photos')),
                ('caption', models.TextField(blank=True)),
                ('date', people.fields.UncertainDateField(blank=True, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='photos', to='people.location')),
                ('people', models.ManyToManyField(related_name='photos', to='people.Person')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Marriage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', people.fields.UncertainDateField(blank=True, null=True)),
                ('divorced', models.BooleanField(default=False)),
                ('reference', models.URLField(blank=True, null=True)),
                ('husband', models.ForeignKey(limit_choices_to={'gender': 'M'}, on_delete=django.db.models.deletion.CASCADE, related_name='husband_of', to='people.person')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='weddings', to='people.location')),
                ('wife', models.ForeignKey(limit_choices_to={'gender': 'F'}, on_delete=django.db.models.deletion.CASCADE, related_name='wife_of', to='people.person')),
            ],
            options={
                'ordering': ['husband__surname', 'husband__forename', 'husband__middle_names', 'date'],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='people.location'),
        ),
        migrations.AddField(
            model_name='event',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='people.person'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='documents')),
                ('document_type', models.PositiveSmallIntegerField(choices=[(0, 'Birth/Baptism'), (1, 'Marriage'), (2, 'Death/Burial'), (3, 'Census'), (4, 'Military'), (5, 'Land'), (6, 'Press'), (7, 'Emigration/Citizenship')])),
                ('title', models.CharField(max_length=100)),
                ('people', models.ManyToManyField(related_name='documents', to='people.Person')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
    ]
